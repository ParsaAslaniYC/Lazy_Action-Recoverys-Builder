name: Android Kernel

on:
  workflow_dispatch:
    inputs:
      MANIFEST_BRANCH:
        description: 'Toolchain'
        required: true
        default: '14'
        type: choice
        options:
        - 14
        - 13
        - 12.1
        - 12
        - 11
        - 10
        - 9
      DEVICE_TREE:
        description: 'Custom Kernel Tree'
        required: true
        #default: 'https://github.com/lazycodebuilder/recovery_rmx1851'
      DEVICE_TREE_BRANCH:
        description: 'Custom Kernel Tree Branch'
        required: true
        #default: 'android-14_ofrp'
      #DEVICE_PATH:
      #  description: 'Specify your device path.'
      #  required: true
      #  default: 'device/realme/RMX1851'
      DEVICE_NAME:
        description: 'Specify your Device Codename.'
        required: true
        default: 'RMX1851'
      BUILD_TARGET:
        description: 'Specify your Build Target'
        required: true
        default: 'recovery'
        type: choice
        options:
        - boot
        - recovery
        - vendorboot
      LDCHECK:
        description: 'Use LDCHECK'
        required: false
        default: 'false'
        type: boolean
      LDCHECKPATH:
        description: 'Path of blobs to check' # Use it know what kind of dependencies your missing for decryption blobs.
        required: true
        default: 'system/bin/qseecomd'

jobs:
  build:
    name: Build Monolothic Kernel by ${{ github.actor }}
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
    #- name: Checkout
    #  uses: actions/checkout@v4
              
    #- name: Clean-up
    #  uses: rokibhasansagar/slimhub_actions@main

    - name: Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12
      
    - name: Build Environment
      run: |
        sudo apt-get install git â€“core gnupg flex bison gperf libsdl-dev libesd0-dev libwxgtk2.6-dev build-essential zip curl libncurses5-dev zlib1g-dev ia32-libs lib32z1-dev lib32ncurses5-dev gcc-multilib g++-multilib adb
        #git clone https://github.com/gcc-mirror/gcc.git gcc
        git clone https://github.com/AspectPower/kernel_xiaomi_bengal_515.git -b Non-KSU kernel










    - name: Building Monolothic
      run: |
        cd kernel
        ./build.sh


    #- name: Upload to Release
    #  uses: softprops/action-gh-release@master
    #  with:
    #    files: |
    #      OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/OrangeFox*.img
    #      OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/OrangeFox*.img.tar
    #      OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/OrangeFox*.zip         
    #      OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/ramdisk*.img
    #      OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.gz
    #      OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.lz4
    #    name: Unofficial OrangeFox for ${{ github.event.inputs.DEVICE_NAME }} // ${{ env.BUILD_DATE }}
    #    tag_name: ${{ github.run_id }}
    #    body: |
    #      Build: ${{ github.event.inputs.MANIFEST_BRANCH }}
    #      Device: [Device Tree/Branch](${{ github.event.inputs.DEVICE_TREE }}/tree/${{ github.event.inputs.DEVICE_TREE_BRANCH }})
    #      Commit: Most recent [commit](${{ github.event.inputs.DEVICE_TREE }}/commit/${{ env.COMMIT_ID }}) during building.
    #      MD5 (img): ${{ env.MD5_IMG }}
    #      MD5 (zip): ${{ env.MD5_ZIP }}
          
    - name: Run LDCheck
      if: github.event.inputs.LDCHECK == 'true'
      run: |
        cd tools
        mv -n libneeds ${GITHUB_WORKSPACE}/OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/recovery/root/
        mv -n ldcheck ${GITHUB_WORKSPACE}/OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/recovery/root/
        cd ../OrangeFox/fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/recovery/root
        python3 ldcheck -p system/lib64:vendor/lib64:system/lib:vendor/lib -d ${{ github.event.inputs.LDCHECKPATH }}
        echo "Done checking missing dependencies. Review, and reconfigure your tree."
      continue-on-error: true
